#include "Kernel\Sys.h"
#include "Interrupt.h"

#include "Heap.h"
#include "TTime.h"


#define MEMORY_ALIGN	4

// 当前堆
const Heap* Heap::Current = nullptr;


/*
堆分配原理：
1，使用内存块，记录当前块已使用大小以及下一块地址，形成内存块链表
2，每个内存块剩余空间是下一块指针减去当前块指针再减去已用大小
3，初始化第一个内存块，已使用0
4，申请内存时，从第一块开始找空余空间大于等于目标大小的内存块，割下来作为链表新节点
5，释放内存时，找到所在块，然后当前块上一块的Next指针直接指向当前块的下一块地址，移除当前节点
*/

/******************************** MemoryBlock ********************************/
// 内存块。大小和下一块地址
typedef struct MemoryBlock_
{
	int	Used;
	struct MemoryBlock_*	Next;
} MemoryBlock;

