#include "Drivers\OCM240128.h"
#include "Sys.h"

#define _OCM240128TEST
#ifdef  _OCM240128TEST

OCM240128 ocm;
void OCM240128Test()
{
	ocm.SetPin(PA6,PA7,PA5,PA1,PA0,PE8,PE9,PE11,PA4);
	ocm.LCD_DataPort_Out();
	ocm.LCD_Init();		 //液晶初始化
	ocm.LCD_Clr();		 //	清屏
	ocm.LCD_TEST();
}

#include "stm32f10x.h"	
//管脚定义，移植修改区
//**************************************************************************************************************************
#define  LCD_DATA_GPIO    GPIOE

#define  LCD_GPIO_DAT   GPIO_Pin_8|GPIO_Pin_9|GPIO_Pin_10|GPIO_Pin_11|GPIO_Pin_12|GPIO_Pin_13|GPIO_Pin_14|GPIO_Pin_15

//高8位的数据
void OCM240128::LCD_WriteData(byte da)
{
	LCD_DATA_GPIO->BSRR = da << 8 & 0xff00; 
	LCD_DATA_GPIO->BRR = ((~da) << 8) & 0xff00;
}

/************************************************************************************************
@f_name: void LCD12864_DataPort_Out(void)
@brief:	 将数据总线定义为输出
@param:	 None
@return: None
************************************************************************************************/
void OCM240128::LCD_DataPort_Out()
{
	GPIO_InitTypeDef  GPIO_InitStructure;	//定义结构体

	GPIO_InitStructure.GPIO_Pin  = LCD_GPIO_DAT;		//数据口配置成推挽输出模式
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;   //推挽输出
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;  
	GPIO_Init(LCD_DATA_GPIO , &GPIO_InitStructure);    //IO口初始化函数（使能上述配置）	  
}
/************************************************************************************************
@f_name: void LCD12864_DataPort_In(void)
@brief:	 将数据总线定义为输入
@param:	 None
@return: None
************************************************************************************************/
void OCM240128::LCD_DataPort_In()
{
	GPIO_InitTypeDef  GPIO_InitStructure;	//定义结构体

	GPIO_InitStructure.GPIO_Pin  = LCD_GPIO_DAT;		//数据口配置成浮空输入模式
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;   //浮空输入模式 
	GPIO_Init(LCD_DATA_GPIO , &GPIO_InitStructure);    //IO口初始化函数（使能上述配置）	  
}

#endif //  _OCM240128TEST

const byte  hanzi_16x16[][32]={
/*--  ??:  ?  --*/
/*--  ??12;  ??????????:?x?=16x16   --*/
0x01,0x00,0x01,0x00,0x7F,0xFC,0x01,0x00,0x3F,0xF8,0x01,0x00,0xFF,0xFE,0x00,0x00,
0x1F,0xF0,0x10,0x10,0x1F,0xF0,0x10,0x10,0x1F,0xF0,0x10,0x10,0x10,0x50,0x10,0x20,

/*--  ??:  ?  --*/
/*--  ??12;  ??????????:?x?=16x16   --*/
0x01,0x00,0x02,0x00,0x1F,0xF0,0x10,0x10,0x12,0x10,0x11,0x50,0x10,0x20,0x10,0x00,
0x1F,0xFC,0x02,0x04,0x22,0x24,0x22,0x24,0x3F,0xE4,0x00,0x04,0x00,0x28,0x00,0x10,
};
const byte  GB3212[][32]={
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
/*--  ??:  ?  --*/
/*--  ??12;  ??????????:?x?=16x16   --*/
0x07,0xC0,0x18,0x30,0x20,0x08,0x41,0x04,0x43,0x04,0x85,0x02,0x81,0x02,0x81,0x02,
0x81,0x02,0x81,0x02,0x41,0x04,0x41,0x04,0x20,0x08,0x18,0x30,0x07,0xC0,0x00,0x00,
/*--  ??:  ?  --*/
/*--  ??12;  ??????????:?x?=16x16   --*/
0x07,0xC0,0x18,0x30,0x20,0x08,0x43,0x84,0x44,0x44,0x80,0x42,0x80,0x42,0x80,0x82,
0x81,0x02,0x82,0x02,0x44,0x04,0x47,0xC4,0x20,0x08,0x18,0x30,0x07,0xC0,0x00,0x00,
/*--  ??:  ?  --*/
/*--  ??12;  ??????????:?x?=16x16   --*/
0x07,0xC0,0x18,0x30,0x20,0x08,0x47,0xC4,0x40,0x44,0x80,0x82,0x81,0x02,0x83,0x02,
0x80,0x82,0x80,0x42,0x44,0x44,0x43,0x84,0x20,0x08,0x18,0x30,0x07,0xC0,0x00,0x00,
/*--  ??:  ?  --*/
/*--  ??12;  ??????????:?x?=16x16   --*/
0x07,0xC0,0x18,0x30,0x20,0x08,0x41,0x04,0x42,0x04,0x82,0x02,0x84,0x82,0x84,0x82,
0x88,0x82,0x8F,0xE2,0x40,0x84,0x40,0x84,0x20,0x08,0x18,0x30,0x07,0xC0,0x00,0x00,
/*--  ??:  ?  --*/
/*--  ??12;  ??????????:?x?=16x16   --*/
0x07,0xC0,0x18,0x30,0x20,0x08,0x47,0xC4,0x44,0x04,0x84,0x02,0x87,0x82,0x80,0x42,
0x80,0x42,0x80,0x42,0x48,0x84,0x47,0x04,0x20,0x08,0x18,0x30,0x07,0xC0,0x00,0x00,
/*--  ??:  ?  --*/
/*--  ??12;  ??????????:?x?=16x16   --*/
0x07,0xC0,0x18,0x30,0x20,0x08,0x41,0x04,0x42,0x04,0x82,0x02,0x84,0x02,0x85,0x82,
0x86,0x42,0x84,0x42,0x44,0x44,0x43,0x84,0x20,0x08,0x18,0x30,0x07,0xC0,0x00,0x00,
/*--  ??:  ?  --*/
/*--  ??12;  ??????????:?x?=16x16   --*/
0x07,0xC0,0x18,0x30,0x20,0x08,0x47,0xC4,0x40,0x44,0x80,0x82,0x80,0x82,0x81,0x02,
0x81,0x02,0x81,0x02,0x41,0x04,0x41,0x04,0x20,0x08,0x18,0x30,0x07,0xC0,0x00,0x00,

/*--  ??:  ?  --*/
/*--  ??12;  ??????????:?x?=16x16   --*/
0x07,0xC0,0x18,0x30,0x20,0x08,0x43,0x84,0x44,0x44,0x84,0x42,0x84,0x42,0x83,0x82,
0x84,0x42,0x84,0x42,0x44,0x44,0x43,0x84,0x20,0x08,0x18,0x30,0x07,0xC0,0x00,0x00,
/*--  ??:  ?  --*/
/*--  ??12;  ??????????:?x?=16x16   --*/
0x07,0xC0,0x18,0x30,0x20,0x08,0x43,0x84,0x44,0x44,0x84,0x42,0x84,0x42,0x83,0xC2,
0x80,0x42,0x80,0x82,0x41,0x04,0x42,0x04,0x20,0x08,0x18,0x30,0x07,0xC0,0x00,0x00,
/*--  ??:  ?  --*/
/*--  ??12;  ??????????:?x?=16x16   --*/
0x07,0xC0,0x18,0x30,0x20,0x08,0x49,0xC4,0x5A,0x24,0xAA,0x22,0x8A,0x22,0x8A,0x22,
0x8A,0x22,0x8A,0x22,0x4A,0x24,0x49,0xC4,0x20,0x08,0x18,0x30,0x07,0xC0,0x00,0x00,
/*--  ??:  ?  --*/
/*--  ??12;  ??????????:?x?=16x16   --*/
0x00,0x00,0x0E,0xFC,0xEA,0x08,0xAA,0x08,0xAA,0xE8,0xAA,0xA8,0xAC,0xA8,0xAA,0xA8,
0xAA,0xA8,0xAA,0xA8,0xEA,0xE8,0xAA,0xA8,0x0C,0x08,0x08,0x08,0x08,0x28,0x08,0x10,
};
const byte  shuzi_16x16[][32]={
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
/*--  ??:  ?  --*/
/*--  ??12;  ??????????:?x?=16x16   --*/
0x07,0xC0,0x18,0x30,0x20,0x08,0x41,0x04,0x43,0x04,0x85,0x02,0x81,0x02,0x81,0x02,
0x81,0x02,0x81,0x02,0x41,0x04,0x41,0x04,0x20,0x08,0x18,0x30,0x07,0xC0,0x00,0x00,
/*--  ??:  ?  --*/
/*--  ??12;  ??????????:?x?=16x16   --*/
0x07,0xC0,0x18,0x30,0x20,0x08,0x43,0x84,0x44,0x44,0x80,0x42,0x80,0x42,0x80,0x82,
0x81,0x02,0x82,0x02,0x44,0x04,0x47,0xC4,0x20,0x08,0x18,0x30,0x07,0xC0,0x00,0x00,
};
